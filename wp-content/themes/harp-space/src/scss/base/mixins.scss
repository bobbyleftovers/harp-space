$gutter-v-s: var(--padding-sm);
$gutter-v-m: calc(var(--padding-sm) * 2);
$gutter-h-s: calc(var(--padding-s) / 2);
$gutter-h-m: var(--padding-s);

.transition {
  transition: all 0.3s ease;
}

@mixin size--s() {
  @media(min-width: 420px){
    @content
  };
}

@mixin size--m() {
  @media(min-width: 768px){
    @content
  };
}

@mixin size--l() {
  @media(min-width: 1000px){
    @content
  };
}

@mixin size--xl(){
  @media(min-width: 1200px){
     @content
   };
}


@mixin transition(
  $attribute: all,
  $duration: var(--duration),
  $type: var(--ease)
) {
  transition: $attribute $duration $type;
}

@mixin gutter-l {
  padding-left: $gutter-h-s;

  @include size--m {
    padding-left: $gutter-h-m;
  }
}

@mixin gutter-r {
  padding-right: $gutter-h-s;

  @include size--m {
    padding-right: $gutter-h-m;
  }
}

@mixin gutter-t {
  padding-top: $gutter-v-s;

  @include size--m {
    padding-top: $gutter-v-m;
  }
}

@mixin gutter-b {
  padding-bottom: $gutter-v-s;

  @include size--m {
    padding-bottom: $gutter-v-m;
  }
}

@mixin gutter {
  @include gutter-l;
  @include gutter-r;
  @include gutter-t;
  @include gutter-b;
}

@mixin gutter-t--small {
  padding-top: calc($gutter-v-s / 2);

  @include size--m {
    padding-top: calc($gutter-v-m / 2);
  }
}

@mixin gutter-b--small {
  padding-bottom: calc($gutter-v-s / 2);

  @include size--m {
    padding-bottom: calc($gutter-v-m / 2);
  }
}

.container {
  margin-top: 60px;
  margin-bottom: 80px;
  position: relative;
}

.container-xs {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--container-xs);
}

.container-s {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--container-s);
}

.container-m {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--container-m);
}

.container-l {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--container-l);
}

.container-xl {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--container-xl);
}

.bg-cover {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

.absolute-full {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.fade-in {
  opacity: 1;
  visibility: visible;
}

.fade-out {
  opacity: 0;
  visibility: hidden;
}

.move-top {
  transition: all 0.4s ease-in-out;
  transform: translateY(150px);
  transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.move-right {
  transition: transform 0.4s ease;
  transform: translateX(100vw);
  transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.top-border {
  position: relative;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: $gutter-h-s;
    right: $gutter-h-s;
    border-top: 1px solid var(--c-lite-grey);
  }

  @include size--m {
    &::before {
      left: $gutter-h-m;
      right: $gutter-h-m;
    }
  }

  &--full {
    &::before {
      left: 0;
      right: 0;
    }
  }
}

.bottom-border {
  position: relative;

  &::before {
    content: "";
    position: absolute;
    bottom: 0;
    left: $gutter-h-s;
    right: $gutter-h-s;
    border-bottom: 1px solid var(--c-lite-grey);
  }

  @include size--m {
    &::before {
      left: $gutter-h-m;
      right: $gutter-h-m;
    }
  }
}

.link {
  color: var(--c-pink);
  padding-bottom: 0.1em;
  border-bottom: 1px solid var(--c-pink);
}

/* Text meant only for screen readers. */
.screen-reader-text {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
  width: 1px;
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  word-wrap: normal;
}

.screen-reader-text:focus {
  background-color: var(--c-lite-grey);
  clip: auto !important;
  clip-path: none;
  color: var(--c-black);
  display: block;
  font-size: 1rem;
  height: auto;
  top: 5px;
  left: 5px;
  line-height: normal;
  text-decoration: none;
  width: auto;
}
