$gutter-v-s: var(--padding-sm);
$gutter-v-m: calc(var(--padding-sm) * 2);
$gutter-h-s: calc(var(--padding-s) / 2);
$gutter-h-m: var(--padding-s);

.transition {
  transition: all 0.3s ease;
}

@mixin transition(
  $attribute: all,
  $duration: var(--duration),
  $type: var(--ease)
) {
  transition: $attribute $duration $type;
}

@mixin base-font {
  font-size: 1.2rem;
  line-height: 1.625;
  font-family: var(--font-body);
  font-weight: 300;
  letter-spacing: 0.05em;
}

@mixin gutter-l {
  padding-left: $gutter-h-s;

  @include size--m {
    padding-left: $gutter-h-m;
  }
}

@mixin gutter-r {
  padding-right: $gutter-h-s;

  @include size--m {
    padding-right: $gutter-h-m;
  }
}

@mixin gutter-t {
  padding-top: $gutter-v-s;

  @include size--m {
    padding-top: $gutter-v-m;
  }
}

@mixin gutter-b {
  padding-bottom: $gutter-v-s;

  @include size--m {
    padding-bottom: $gutter-v-m;
  }
}

@mixin gutter {
  @include gutter-l;
  @include gutter-r;
  @include gutter-t;
  @include gutter-b;
}

@mixin gutter-t--small {
  padding-top: calc($gutter-v-s / 2);

  @include size--m {
    padding-top: calc($gutter-v-m / 2);
  }
}

@mixin gutter-b--small {
  padding-bottom: calc($gutter-v-s / 2);

  @include size--m {
    padding-bottom: calc($gutter-v-m / 2);
  }
}

.container {
  margin-top: 60px;
  margin-bottom: 80px;
  position: relative;
}

.container-xs {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--container-xs);
}

.container-s {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--container-s);
}

.container-m {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--container-m);
}

.container-l {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--container-l);
}

.container-xl {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--container-xl);
}

.bg-cover {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

.absolute-full {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.fade-in {
  opacity: 1;
  visibility: visible;
}

.fade-out {
  opacity: 0;
  visibility: hidden;
}

.bg-red {
  background-color: var(--c-blue);
  color: var(--c-white);
}

.red {
  color: var(--c-blue);
}

.bg-diagonal {
  position: relative;

  &::before,
  &::after {
    content: "";
    display: block;
    position: absolute;
    z-index: 10;
    left: -5%;
    right: -5%;
    width: 110%;
    height: 30px;
    background: var(--c-dark-grey);
    transform: rotate3d(0, 0, 1, 4deg);

    @include size--s {
      height: 40px;
      transform: rotate3d(0, 0, 1, 4deg);
    }
  }

  &::before {
    top: -13px;

    @include size--s {
      top: -18px;
    }
  }

  &::after {
    bottom: -13px;

    @include size--s {
      bottom: -18px;
    }
  }
}

.move-top {
  transition: all 0.4s ease-in-out;
  transform: translateY(150px);
  transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.move-right {
  transition: transform 0.4s ease;
  transform: translateX(100vw);
  transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.top-border {
  position: relative;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: $gutter-h-s;
    right: $gutter-h-s;
    border-top: 1px solid var(--c-lite-grey);
  }

  @include size--m {
    &::before {
      left: $gutter-h-m;
      right: $gutter-h-m;
    }
  }

  &--full {
    &::before {
      left: 0;
      right: 0;
    }
  }
}

.bottom-border {
  position: relative;

  &::before {
    content: "";
    position: absolute;
    bottom: 0;
    left: $gutter-h-s;
    right: $gutter-h-s;
    border-bottom: 1px solid var(--c-lite-grey);
  }

  @include size--m {
    &::before {
      left: $gutter-h-m;
      right: $gutter-h-m;
    }
  }
}

.diamond {
  position: relative;

  &::after {
    @extend .transition;

    z-index: -1;
    position: absolute;
    top: 50%;
    left: -50%;
    content: "";
    display: block;
    width: 100%;
    height: 100%;
    transform: rotate(-45deg);
    transform-origin: 10% -30%;
    border: 1px solid var(--c-white);
  }
}

.section-heading {
  @extend .diamond;

  display: inline-block;
  position: relative;
  color: var(--c-white);
  margin: 1.5rem auto 3rem;

  @include size--l {
    text-align: right;
    z-index: 1;
    position: absolute;
    transform-origin: right;
    width: 225px;
    left: calc(-300px + 0.5em);
    top: -70px;
    transform: rotate(-90deg);
    margin: $gutter-v-m 0 0 $gutter-h-m;
  }

  &::after {
    width: 7px;
    height: 7px;
    background: var(--c-white);
    border: none;
    top: -1em;
    left: calc(50% - 7px);

    @include size--l {
      left: auto;
      top: 0.75em;
      right: -1em;
    }
  }

  &--mobile {
    display: block;

    @include size--m {
      display: none;
    }
  }

  &--tablet {
    display: none;

    @include size--m {
      display: block;
    }

    @include size--l {
      display: none;
    }
  }

  &--desktop {
    display: none;

    @include size--l {
      display: block;
    }
  }

  &--horizontal {
    margin: 0 0 0 1.5em;

    @include size--l {
      position: relative;
      top: auto;
      left: auto;
      transform: none;
      width: auto;
    }

    &::after {
      top: 0.65em;
      left: -1.5em;

      @include size--l {
        left: -1.5em;
        top: 0.65em;
        right: auto;
      }
    }
  }
}

.section-subheading {
  width: 100%;
  margin-bottom: 2em;

  @include size--l {
    max-width: 540px;
  }
}

.link {
  color: var(--c-blue);
  padding-bottom: 0.1em;
  border-bottom: 1px solid var(--c-blue);
}

/* Text meant only for screen readers. */
.screen-reader-text {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
  width: 1px;
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  word-wrap: normal;
}

.screen-reader-text:focus {
  background-color: var(--c-lite-grey);
  clip: auto !important;
  clip-path: none;
  color: var(--c-black);
  display: block;
  font-size: 1rem;
  height: auto;
  top: 5px;
  left: 5px;
  line-height: normal;
  text-decoration: none;
  width: auto;
}
